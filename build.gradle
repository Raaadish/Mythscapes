buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

group = "com.radish.Mythscapes"
version = "${mod_version}-${minecraft_version}"
archivesBaseName = "Mythscapes"

idea {
    project {
        languageLevel = '1.8'
    }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=mythscapes.mixins.json"

            mods {
                mythscapes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=mythscapes.mixins.json"

            mods {
                mythscapes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mythscapes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            environment 'target', 'fmluserdevdata'

            mods {
                mythscapes {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name 'prog'
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name 'HWYLA'
        url "https://maven.tehnut.info"
    }
    maven {
        name 'Mekanism'
        url "https://modmaven.dev/"
    }
}

mixin {
    add sourceSets.main, "mythscapes.mixins.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // JetBrains
    compileOnly "org.jetbrains:annotations:${jb_annotations}"

    // JEI
    compileOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:${jei_version}")

    // HWYLA
    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}:api")
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")

    compileOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445:api")
    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.18.445")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Mythscapes",
            "Specification-Vendor": "Mythscapes Team",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Mythscapes Team",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "mythscapes.mixins.json"
        ])
    }
}

task apiJar(type: Jar) {
    classifier = 'api'
    include 'com/radish/mythscapes/api/**/*'
    exclude 'com/radish/mythscapes/api/impl/**/*'

    from sourceSets.main.output
    from sourceSets.main.allSource
}

artifacts {
    archives apiJar
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}